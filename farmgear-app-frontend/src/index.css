@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* CSS custom properties */
:root {
  --primary-50: #f0fdf4;
  --primary-500: #22c55e;
  --primary-600: #16a34a;
  --primary-700: #15803d;

  --neutral-50: #fafafa;
  --neutral-100: #f5f5f5;
  --neutral-900: #171717;

  --shadow-soft: 0 2px 15px -3px rgba(0, 0, 0, 0.07), 0 10px 20px -2px rgba(0, 0, 0, 0.04);
  --shadow-medium: 0 4px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);

  --border-radius-lg: 0.5rem;
  --border-radius-xl: 0.75rem;
  --border-radius-2xl: 1rem;
}

/* Base style reset and enhancement */
@layer base {
  * {
    @apply border-neutral-200;
  }

  html {
    @apply scroll-smooth;
  }

  body {
    @apply bg-neutral-50 text-neutral-900 font-sans antialiased;
    font-feature-settings: 'cv11', 'ss01';
    font-variation-settings: 'opsz' 32;
  }

  /* Title styles */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply font-display font-semibold tracking-tight;
  }

  h1 {
    @apply text-4xl lg:text-5xl;
  }

  h2 {
    @apply text-3xl lg:text-4xl;
  }

  h3 {
    @apply text-2xl lg:text-3xl;
  }

  /* Link styles */
  a {
    @apply transition-colors duration-200;
  }

  /* Button base styles */
  button {
    @apply transition-all duration-200;
  }

  /* Input field base styles */
  input,
  textarea,
  select {
    @apply transition-all duration-200;
  }

  /* Scrollbar styles */
  ::-webkit-scrollbar {
    @apply w-2;
  }

  ::-webkit-scrollbar-track {
    @apply bg-neutral-100;
  }

  ::-webkit-scrollbar-thumb {
    @apply bg-neutral-300 rounded-full;
  }

  ::-webkit-scrollbar-thumb:hover {
    @apply bg-neutral-400;
  }
}

/* Component styles */
@layer components {
  /* Card component base styles */
  .card {
    @apply bg-white rounded-xl shadow-soft border border-neutral-200/50;
  }

  .card-hover {
    @apply hover:shadow-medium hover:-translate-y-1 transition-all duration-300;
  }

  /* Gradient background */
  .gradient-bg {
    background: linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%);
  }

  .hero-gradient {
    background: linear-gradient(135deg, rgba(34, 197, 94, 0.1) 0%, rgba(16, 163, 74, 0.05) 100%);
  }

  /* Glassmorphism effect */
  .glass {
    @apply bg-white/80 backdrop-blur-sm border border-white/20;
  }

  /* Button style enhancement */
  .btn-primary {
    @apply bg-primary-600 hover:bg-primary-700 text-white font-medium px-6 py-3 rounded-xl shadow-soft hover:shadow-medium transition-all duration-200 hover:-translate-y-0.5;
  }

  .btn-secondary {
    @apply bg-white hover:bg-neutral-50 text-neutral-900 font-medium px-6 py-3 rounded-xl border border-neutral-200 shadow-soft hover:shadow-medium transition-all duration-200 hover:-translate-y-0.5;
  }

  /* Input field style enhancement */
  .input-field {
    @apply w-full px-4 py-3 bg-white border border-neutral-200 rounded-xl focus:ring-2 focus:ring-primary-500/20 focus:border-primary-500 transition-all duration-200 placeholder:text-neutral-400;
  }

  /* Text styles */
  .text-gradient {
    @apply bg-gradient-to-r from-primary-600 to-primary-700 bg-clip-text text-transparent;
  }

  /* Animation classes - complete solution to prevent flickering */
  .animate-fade-in-up {
    /* Set initial state to prevent flickering */
    opacity: 0;
    transform: translateY(30px);
    /* Use animation-fill-mode: both to ensure correct states before and after animation */
    animation: fadeInUp 0.6s ease-out 0.1s both;
  }

  /* Staggered animation delay - fix flickering issue */
  .animate-stagger-1 {
    animation-delay: 0.2s;
  }

  .animate-stagger-2 {
    animation-delay: 0.3s;
  }

  .animate-stagger-3 {
    animation-delay: 0.4s;
  }

  /* For accessibility consideration - show immediately when animations are disabled */
  @media (prefers-reduced-motion: reduce) {
    .animate-fade-in-up,
    .animate-stagger-1,
    .animate-stagger-2,
    .animate-stagger-3 {
      opacity: 1;
      transform: none;
      animation: none;
    }
  }
}

/* Utility classes */
@layer utilities {
  /* Text balance */
  .text-balance {
    text-wrap: balance;
  }

  /* Hide scrollbar but maintain functionality */
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }

  /* Safe area */
  .safe-top {
    padding-top: env(safe-area-inset-top);
  }

  .safe-bottom {
    padding-bottom: env(safe-area-inset-bottom);
  }
}

/* Animation keyframes */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Toast animations */
@keyframes slideIn {
  from {
    transform: translateX(calc(-100% - 1rem));
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideOut {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(calc(-100% - 1rem));
    opacity: 0;
  }
}

@keyframes swipeOut {
  from {
    transform: translateX(var(--radix-toast-swipe-end-x));
    opacity: 1;
  }
  to {
    transform: translateX(calc(-100% - 1rem));
    opacity: 0;
  }
}

/* Toast animation classes - implemented through .animate-* class names, remove global data-state selectors */
/* Toast component already uses data-[state=open]:animate-slideIn etc. directly in className */

.animate-slideIn {
  animation: slideIn 0.4s cubic-bezier(0.16, 1, 0.3, 1) !important;
}

.animate-slideOut {
  animation: slideOut 0.3s cubic-bezier(0.4, 0, 1, 1) !important;
}

.animate-swipeOut {
  animation: swipeOut 0.2s ease-out !important;
}

/* Responsive design */
@media (max-width: 640px) {
  .container {
    @apply px-4;
  }
}

/* Dark mode support (reserved) */
@media (prefers-color-scheme: dark) {
  /* Dark mode styles will be added later */
}

/* Print styles */
@media print {
  .no-print {
    display: none !important;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .card {
    @apply border-2 border-neutral-400;
  }
}

/* Reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}
